---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: default
  labels:
    app.kubernetes.io/name: mysql-node
    app.kubernetes.io/instance: 3.3.3
data:
  config.json: |-
    {
      "server":"0.0.0.0",
      "server_port":9000,
      "password":"passcloud",
      "timeout":300,
      "method":"aes-256-cfb",
      "nameserver":"8.8.8.8",
      "mode":"tcp_and_udp"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-node
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql-node
      app.kubernetes.io/instance: 3.3.3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql-node
        app.kubernetes.io/instance: 3.3.3
    spec:
      containers:
        - name: mysql
          image: docker.io/luoweb/mysql-libev:alpine
          # image: mohsenmottaghi/cloak-mysql:mysql-server
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVER_IP
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "9000"
            - name: ENCRYPTION
              value: "AES-256-CFB"
            - name: SERVER_PORT
              value: "password"
          ports:
            - containerPort: 9000
              protocol: TCP
            - containerPort: 1080
              protocol: TCP
          volumeMounts:
            - name: mysql-conf
              mountPath: /etc/mysql-libev
      volumes:
        - name: mysql-conf
          configMap:
            name: mysql-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-node
  namespace: default
  labels:
    app.kubernetes.io/name: mysql-node
    app.kubernetes.io/instance: 3.3.3
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      nodePort: 32700
  selector:
    app.kubernetes.io/name: mysql-node
    app.kubernetes.io/instance: 3.3.3
